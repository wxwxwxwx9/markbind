/* eslint-env node */
const path = require('path');
const MFS = require('memory-fs');
const webpack = require('webpack');
const { merge } = require('webpack-merge');
const webpackDevMiddleware = require('webpack-dev-middleware');
const webpackHotMiddleware = require('webpack-hot-middleware');
const VueLoaderPlugin = require('vue-loader/lib/plugin');

const config = require('./webpack.common.js');
const serverConfig = require('./webpack.server.config');

module.exports = {
  client: (publicPath) => {
    const webpackDevConfig = merge(config, {
      mode: 'development',
      entry: {
        markbind: ['webpack-hot-middleware/client', path.join(__dirname, 'src', 'index.js')],
      },
      output: {
        publicPath,
      },
      module: {
        rules: [
          {
            test: /\.css$/,
            use: [
              'vue-style-loader',
              'css-loader',
            ],
          },
        ],
      },
      plugins: [
        new webpack.HotModuleReplacementPlugin(),
        new webpack.NoEmitOnErrorsPlugin(),
        new VueLoaderPlugin(),
      ],
    });

    const compiler = webpack(webpackDevConfig);
    return [
      webpackDevMiddleware(compiler, {
        publicPath,
      }),
      webpackHotMiddleware(compiler),
    ];
  },
  server: (cb) => {
    const webpackServerDevConfig = merge(config, serverConfig);

    const readFile = (fs, file) => {
      try {
        return fs.readFileSync(path.join(config.output.path, file), 'utf-8');
      } catch (e) {
        console.log('readFile error!');
      }
    };

    let bundle;
    // let ready;
    // const readyPromise = new Promise((r) => { ready = r; });
    const update = () => {
      if (bundle) {
        // ready()
        cb(bundle);
      }
    };

    // watch and update server renderer
    const serverCompiler = webpack(webpackServerDevConfig);
    const mfs = new MFS();
    serverCompiler.outputFileSystem = mfs;
    serverCompiler.watch({}, (err, stats) => {
      if (err) throw err;
      stats = stats.toJson();
      if (stats.errors.length) return;

      // read bundle generated by vue-ssr-webpack-plugin
      bundle = JSON.parse(readFile(mfs, 'vue-ssr-server-bundle.json'));
      update();
    });

    // return readyPromise;
  },
};
